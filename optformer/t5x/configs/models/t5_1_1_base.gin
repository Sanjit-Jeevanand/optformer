# T5 model specific overrides.
#
# Add this config after a model config gin file.

from __gin__ import dynamic_registration

from optformer.t5x import decoding as vizier_decoding
from optformer.t5x import models as vizier_models
from t5x.examples.t5 import network
from t5x import partitioning
from t5x import utils

include 't5x/examples/t5/t5_1_1/base.gin'

MODEL = @vizier_models.VizierEncoderDecoderModel()
vizier_models.VizierEncoderDecoderModel:
  module = @network.Transformer()
  input_vocabulary = %VOCABULARY
  output_vocabulary = %VOCABULARY
  optimizer_def = %OPTIMIZER
  decode_fn = @vizier_decoding.temperature_sample
  z_loss = %Z_LOSS
  label_smoothing = %LABEL_SMOOTHING
  loss_normalizing_factor = %LOSS_NORMALIZING_FACTOR

NUM_EMBEDDINGS = 32128  # vocab size rounded to a multiple of 128 for TPU efficiency
network.T5Config:
  vocab_size = %NUM_EMBEDDINGS

NUM_PARTITIONS = 1  # Exclusive with MODEL_PARALLEL_SUBMESH
MODEL_PARALLEL_SUBMESH = None
partitioning.PjitPartitioner:
  num_partitions = %NUM_PARTITIONS
  model_parallel_submesh = %MODEL_PARALLEL_SUBMESH

# Sample
TOPK = 40
TEMPERATURE = 1.0
MAX_DECODE_STEPS = None
vizier_decoding.temperature_sample:
  temperature = %TEMPERATURE
  topk = %TOPK
  max_decode_len = %MAX_DECODE_STEPS
vizier_models.VizierEncoderDecoderModel.decode_fn = @vizier_decoding.temperature_sample

NUM_DECODES = 1
RETURN_ALL_DECODES = True
vizier_models.VizierEncoderDecoderModel.predict_batch_with_aux:
  num_decodes = %NUM_DECODES
  return_all_decodes = %RETURN_ALL_DECODES

CHECKPOINT_PATH = []
utils.RestoreCheckpointConfig:
  path = %CHECKPOINT_PATH
  mode = 'specific'
  dtype = 'float32'
